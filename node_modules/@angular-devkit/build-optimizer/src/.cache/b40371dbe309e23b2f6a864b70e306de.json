{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/mesh3d/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/mesh3d/defaults.js","mtime":1529418310724},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    // read in face/vertex properties\n    function readComponents(array) {\n        var ret = array.map(function(attr) {\n            var result = coerce(attr);\n\n            if(result && Lib.isArrayOrTypedArray(result)) return result;\n            return null;\n        });\n\n        return ret.every(function(x) {\n            return x && x.length === ret[0].length;\n        }) && ret;\n    }\n\n    var coords = readComponents(['x', 'y', 'z']);\n    var indices = readComponents(['i', 'j', 'k']);\n\n    if(!coords) {\n        traceOut.visible = false;\n        return;\n    }\n\n    if(indices) {\n        // otherwise, convert all face indices to ints\n        indices.forEach(function(index) {\n            for(var i = 0; i < index.length; ++i) index[i] |= 0;\n        });\n    }\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y', 'z'], layout);\n\n    // Coerce remaining properties\n    [\n        'lighting.ambient',\n        'lighting.diffuse',\n        'lighting.specular',\n        'lighting.roughness',\n        'lighting.fresnel',\n        'lighting.vertexnormalsepsilon',\n        'lighting.facenormalsepsilon',\n        'lightposition.x',\n        'lightposition.y',\n        'lightposition.z',\n        'contour.show',\n        'contour.color',\n        'contour.width',\n        'colorscale',\n        'reversescale',\n        'flatshading',\n        'alphahull',\n        'delaunayaxis',\n        'opacity'\n    ].forEach(function(x) { coerce(x); });\n\n    if('intensity' in traceIn) {\n        coerce('intensity');\n        colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: '', cLetter: 'c'});\n    } else {\n        traceOut.showscale = false;\n\n        if('facecolor' in traceIn) coerce('facecolor');\n        else if('vertexcolor' in traceIn) coerce('vertexcolor');\n        else coerce('color', defaultColor);\n    }\n\n    coerce('text');\n\n    // disable 1D transforms\n    // x/y/z should match lengths, and i/j/k should match as well, but\n    // the two sets have different lengths so transforms wouldn't work.\n    traceOut._length = null;\n};\n",null]}