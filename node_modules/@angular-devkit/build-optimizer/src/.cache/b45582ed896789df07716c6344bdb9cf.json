{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/to-float32/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/to-float32/index.js","mtime":1529418312229},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/* @module to-float32 */\r\n\r\n'use strict'\r\n\r\nmodule.exports = float32\r\nmodule.exports.float32 =\r\nmodule.exports.float = float32\r\nmodule.exports.fract32 =\r\nmodule.exports.fract = fract32\r\n\r\n// return fractional part of float32 array\r\nfunction fract32 (arr) {\r\n\tif (typeof arr === 'number') {\r\n\t\treturn float32(arr - float32(arr))\r\n\t}\r\n\r\n\tvar fract = float32(arr)\r\n\tfor (var i = 0, l = fract.length; i < l; i++) {\r\n\t\tfract[i] = arr[i] - fract[i]\r\n\t}\r\n\treturn fract\r\n}\r\n\r\n// make sure data is float32 array\r\nfunction float32 (arr) {\r\n\tif (arr instanceof Float32Array) return arr\r\n\tif (typeof arr === 'number') {\r\n\t\treturn (new Float32Array([arr]))[0]\r\n\t}\r\n\r\n\tvar float = new Float32Array(arr)\r\n\tfloat.set(arr)\r\n\treturn float\r\n}\r\n",null]}