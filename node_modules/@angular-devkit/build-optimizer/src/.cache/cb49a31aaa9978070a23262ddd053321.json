{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/polar/helpers.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/polar/helpers.js","mtime":1529418310694},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nexports.setConvertAngular = function setConvertAngular(ax) {\n    var dir = {clockwise: -1, counterclockwise: 1}[ax.direction];\n    var rot = Lib.deg2rad(ax.rotation);\n    var _c2rad;\n    var _rad2c;\n\n    function getTotalNumberOfCategories() {\n        return ax.period ?\n            Math.max(ax.period, ax._categories.length) :\n            ax._categories.length;\n    }\n\n    if(ax.type === 'linear') {\n        _c2rad = function(v, unit) {\n            if(unit === 'degrees') return Lib.deg2rad(v);\n            return v;\n        };\n        _rad2c = function(v, unit) {\n            if(unit === 'degrees') return Lib.rad2deg(v);\n            return v;\n        };\n    }\n    else if(ax.type === 'category') {\n        _c2rad = function(v) {\n            var tot = getTotalNumberOfCategories();\n            return v * 2 * Math.PI / tot;\n        };\n        _rad2c = function(v) {\n            var tot = getTotalNumberOfCategories();\n            return v * tot / Math.PI / 2;\n        };\n    }\n\n    function transformRad(v) { return dir * v + rot; }\n    function unTransformRad(v) { return (v - rot) / dir; }\n\n    // use the shift 'sector' to get right tick labels for non-default\n    // angularaxis 'rotation' and/or 'direction'\n    ax.unTransformRad = unTransformRad;\n\n    // this version is used on hover\n    ax._c2rad = _c2rad;\n\n    ax.c2rad = function(v, unit) { return transformRad(_c2rad(v, unit)); };\n    ax.rad2c = function(v, unit) { return _rad2c(unTransformRad(v), unit); };\n\n    ax.c2deg = function(v, unit) { return Lib.rad2deg(ax.c2rad(v, unit)); };\n    ax.deg2c = function(v, unit) { return ax.rad2c(Lib.deg2rad(v), unit); };\n};\n",null]}