{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/calc_labels.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/calc_labels.js","mtime":1529418310705},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = function calcLabels(trace, axis) {\n    var i, tobj, prefix, suffix, gridline;\n\n    var labels = axis._labels = [];\n    var gridlines = axis._gridlines;\n\n    for(i = 0; i < gridlines.length; i++) {\n        gridline = gridlines[i];\n\n        if(['start', 'both'].indexOf(axis.showticklabels) !== -1) {\n            tobj = Axes.tickText(axis, gridline.value);\n\n            extendFlat(tobj, {\n                prefix: prefix,\n                suffix: suffix,\n                endAnchor: true,\n                xy: gridline.xy(0),\n                dxy: gridline.dxy(0, 0),\n                axis: gridline.axis,\n                length: gridline.crossAxis.length,\n                font: gridline.axis.tickfont,\n                isFirst: i === 0,\n                isLast: i === gridlines.length - 1\n            });\n\n            labels.push(tobj);\n        }\n\n        if(['end', 'both'].indexOf(axis.showticklabels) !== -1) {\n            tobj = Axes.tickText(axis, gridline.value);\n\n            extendFlat(tobj, {\n                endAnchor: false,\n                xy: gridline.xy(gridline.crossLength - 1),\n                dxy: gridline.dxy(gridline.crossLength - 2, 1),\n                axis: gridline.axis,\n                length: gridline.crossAxis.length,\n                font: gridline.axis.tickfont,\n                isFirst: i === 0,\n                isLast: i === gridlines.length - 1\n            });\n\n            labels.push(tobj);\n        }\n    }\n};\n",null]}