{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/pointcloud/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/pointcloud/defaults.js","mtime":1529418310731},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    coerce('x');\n    coerce('y');\n\n    coerce('xbounds');\n    coerce('ybounds');\n\n    if(traceIn.xy && traceIn.xy instanceof Float32Array) {\n        traceOut.xy = traceIn.xy;\n    }\n\n    if(traceIn.indices && traceIn.indices instanceof Int32Array) {\n        traceOut.indices = traceIn.indices;\n    }\n\n    coerce('text');\n    coerce('marker.color', defaultColor);\n    coerce('marker.opacity');\n    coerce('marker.blend');\n    coerce('marker.sizemin');\n    coerce('marker.sizemax');\n    coerce('marker.border.color', defaultColor);\n    coerce('marker.border.arearatio');\n\n    // disable 1D transforms - that would defeat the purpose of this trace type, performance!\n    traceOut._length = null;\n};\n",null]}