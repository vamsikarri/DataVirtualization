{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/histogram/norm_functions.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/histogram/norm_functions.js","mtime":1529418310722},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n    percent: function(size, total) {\n        var nMax = size.length,\n            norm = 100 / total;\n        for(var n = 0; n < nMax; n++) size[n] *= norm;\n    },\n    probability: function(size, total) {\n        var nMax = size.length;\n        for(var n = 0; n < nMax; n++) size[n] /= total;\n    },\n    density: function(size, total, inc, yinc) {\n        var nMax = size.length;\n        yinc = yinc || 1;\n        for(var n = 0; n < nMax; n++) size[n] *= inc[n] * yinc;\n    },\n    'probability density': function(size, total, inc, yinc) {\n        var nMax = size.length;\n        if(yinc) total /= yinc;\n        for(var n = 0; n < nMax; n++) size[n] *= inc[n] / total;\n    }\n};\n",null]}