{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/orient_text.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/orient_text.js","mtime":1529418310707},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nmodule.exports = function orientText(trace, xaxis, yaxis, xy, dxy, refDxy) {\n    var dx = dxy[0] * trace.dpdx(xaxis);\n    var dy = dxy[1] * trace.dpdy(yaxis);\n    var flip = 1;\n\n    var offsetMultiplier = 1.0;\n    if(refDxy) {\n        var l1 = Math.sqrt(dxy[0] * dxy[0] + dxy[1] * dxy[1]);\n        var l2 = Math.sqrt(refDxy[0] * refDxy[0] + refDxy[1] * refDxy[1]);\n        var dot = (dxy[0] * refDxy[0] + dxy[1] * refDxy[1]) / l1 / l2;\n        offsetMultiplier = Math.max(0.0, dot);\n    }\n\n    var angle = Math.atan2(dy, dx) * 180 / Math.PI;\n    if(angle < -90) {\n        angle += 180;\n        flip = -flip;\n    } else if(angle > 90) {\n        angle -= 180;\n        flip = -flip;\n    }\n\n    return {\n        angle: angle,\n        flip: flip,\n        p: trace.c2p(xy, xaxis, yaxis),\n        offsetMultplier: offsetMultiplier\n    };\n};\n",null]}