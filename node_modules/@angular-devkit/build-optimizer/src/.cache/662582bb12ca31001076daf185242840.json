{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatter3d/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatter3d/defaults.js","mtime":1529418310738},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar handleLineDefaults = require('../scatter/line_defaults');\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleXYZDefaults(traceIn, traceOut, coerce, layout);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('mode');\n\n    if(subTypes.hasLines(traceOut)) {\n        coerce('connectgaps');\n        handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    }\n\n    if(subTypes.hasMarkers(traceOut)) {\n        handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {noSelect: true});\n    }\n\n    if(subTypes.hasText(traceOut)) {\n        handleTextDefaults(traceIn, traceOut, layout, coerce, {noSelect: true});\n    }\n\n    var lineColor = (traceOut.line || {}).color,\n        markerColor = (traceOut.marker || {}).color;\n    if(coerce('surfaceaxis') >= 0) coerce('surfacecolor', lineColor || markerColor);\n\n    var dims = ['x', 'y', 'z'];\n    for(var i = 0; i < 3; ++i) {\n        var projection = 'projection.' + dims[i];\n        if(coerce(projection + '.show')) {\n            coerce(projection + '.opacity');\n            coerce(projection + '.scale');\n        }\n    }\n\n    var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n    errorBarsSupplyDefaults(traceIn, traceOut, defaultColor, {axis: 'z'});\n    errorBarsSupplyDefaults(traceIn, traceOut, defaultColor, {axis: 'y', inherit: 'z'});\n    errorBarsSupplyDefaults(traceIn, traceOut, defaultColor, {axis: 'x', inherit: 'z'});\n};\n\nfunction handleXYZDefaults(traceIn, traceOut, coerce, layout) {\n    var len = 0,\n        x = coerce('x'),\n        y = coerce('y'),\n        z = coerce('z');\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y', 'z'], layout);\n\n    if(x && y && z) {\n        // TODO: what happens if one is missing?\n        len = Math.min(x.length, y.length, z.length);\n        traceOut._length = traceOut._xlength = traceOut._ylength = traceOut._zlength = len;\n    }\n\n    return len;\n}\n",null]}