{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/xy_defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/xy_defaults.js","mtime":1529418310708},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isArray1D = require('../../lib').isArray1D;\n\nmodule.exports = function handleXYDefaults(traceIn, traceOut, coerce) {\n    var x = coerce('x');\n    var hasX = x && x.length;\n    var y = coerce('y');\n    var hasY = y && y.length;\n    if(!hasX && !hasY) return false;\n\n    traceOut._cheater = !x;\n\n    if((!hasX || isArray1D(x)) && (!hasY || isArray1D(y))) {\n        var len = hasX ? x.length : Infinity;\n        if(hasY) len = Math.min(len, y.length);\n        if(traceOut.a && traceOut.a.length) len = Math.min(len, traceOut.a.length);\n        if(traceOut.b && traceOut.b.length) len = Math.min(len, traceOut.b.length);\n        traceOut._length = len;\n    }\n    else traceOut._length = null;\n\n    return true;\n};\n",null]}