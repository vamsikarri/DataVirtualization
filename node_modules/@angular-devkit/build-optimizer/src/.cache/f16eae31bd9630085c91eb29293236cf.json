{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-axes3d/lib/ticks.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-axes3d/lib/ticks.js","mtime":1529418308594},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["'use strict'\r\n\r\nexports.create   = defaultTicks\r\nexports.equal    = ticksEqual\r\n\r\nfunction prettyPrint(spacing, i) {\r\n  var stepStr = spacing + \"\"\r\n  var u = stepStr.indexOf(\".\")\r\n  var sigFigs = 0\r\n  if(u >= 0) {\r\n    sigFigs = stepStr.length - u - 1\r\n  }\r\n  var shift = Math.pow(10, sigFigs)\r\n  var x = Math.round(spacing * i * shift)\r\n  var xstr = x + \"\"\r\n  if(xstr.indexOf(\"e\") >= 0) {\r\n    return xstr\r\n  }\r\n  var xi = x / shift, xf = x % shift\r\n  if(x < 0) {\r\n    xi = -Math.ceil(xi)|0\r\n    xf = (-xf)|0\r\n  } else {\r\n    xi = Math.floor(xi)|0\r\n    xf = xf|0\r\n  }\r\n  var xis = \"\" + xi \r\n  if(x < 0) {\r\n    xis = \"-\" + xis\r\n  }\r\n  if(sigFigs) {\r\n    var xs = \"\" + xf\r\n    while(xs.length < sigFigs) {\r\n      xs = \"0\" + xs\r\n    }\r\n    return xis + \".\" + xs\r\n  } else {\r\n    return xis\r\n  }\r\n}\r\n\r\nfunction defaultTicks(bounds, tickSpacing) {\r\n  var array = []\r\n  for(var d=0; d<3; ++d) {\r\n    var ticks = []\r\n    var m = 0.5*(bounds[0][d]+bounds[1][d])\r\n    for(var t=0; t*tickSpacing[d]<=bounds[1][d]; ++t) {\r\n      ticks.push({x: t*tickSpacing[d], text: prettyPrint(tickSpacing[d], t)})\r\n    }\r\n    for(var t=-1; t*tickSpacing[d]>=bounds[0][d]; --t) {\r\n      ticks.push({x: t*tickSpacing[d], text: prettyPrint(tickSpacing[d], t)})\r\n    }\r\n    array.push(ticks)\r\n  }\r\n  return array\r\n}\r\n\r\nfunction ticksEqual(ticksA, ticksB) {\r\n  for(var i=0; i<3; ++i) {\r\n    if(ticksA[i].length !== ticksB[i].length) {\r\n      return false\r\n    }\r\n    for(var j=0; j<ticksA[i].length; ++j) {\r\n      var a = ticksA[i][j]\r\n      var b = ticksB[i][j]\r\n      if(\r\n        a.x !== b.x ||\r\n        a.text !== b.text ||\r\n        a.font !== b.font ||\r\n        a.fontColor !== b.fontColor ||\r\n        a.fontSize !== b.fontSize ||\r\n        a.dx !== b.dx ||\r\n        a.dy !== b.dy\r\n      ) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}",null]}