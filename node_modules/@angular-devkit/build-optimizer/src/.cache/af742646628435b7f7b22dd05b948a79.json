{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/sankey/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/sankey/defaults.js","mtime":1529418310732},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar attributes = require('./attributes');\nvar Color = require('../../components/color');\nvar tinycolor = require('tinycolor2');\nvar handleDomainDefaults = require('../../plots/domain').defaults;\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    coerce('node.label');\n    coerce('node.pad');\n    coerce('node.thickness');\n    coerce('node.line.color');\n    coerce('node.line.width');\n\n    var colors = layout.colorway;\n\n    var defaultNodePalette = function(i) {return colors[i % colors.length];};\n\n    coerce('node.color', traceOut.node.label.map(function(d, i) {\n        return Color.addOpacity(defaultNodePalette(i), 0.8);\n    }));\n\n    coerce('link.label');\n    coerce('link.source');\n    coerce('link.target');\n    coerce('link.value');\n    coerce('link.line.color');\n    coerce('link.line.width');\n\n    coerce('link.color', traceOut.link.value.map(function() {\n        return tinycolor(layout.paper_bgcolor).getLuminance() < 0.333 ?\n            'rgba(255, 255, 255, 0.6)' :\n            'rgba(0, 0, 0, 0.2)';\n    }));\n\n    handleDomainDefaults(traceOut, layout, coerce);\n\n    coerce('orientation');\n    coerce('valueformat');\n    coerce('valuesuffix');\n    coerce('arrangement');\n\n    Lib.coerceFont(coerce, 'textfont', Lib.extendFlat({}, layout.font));\n\n    // disable 1D transforms - arrays here are 1D but their lengths/meanings\n    // don't match, between nodes and links\n    traceOut._length = null;\n};\n",null]}