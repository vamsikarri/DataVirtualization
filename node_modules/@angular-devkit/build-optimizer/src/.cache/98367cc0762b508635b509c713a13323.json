{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattercarpet/plot.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattercarpet/plot.js","mtime":1529418310739},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar scatterPlot = require('../scatter/plot');\nvar Axes = require('../../plots/cartesian/axes');\nvar Drawing = require('../../components/drawing');\n\nmodule.exports = function plot(gd, plotinfoproxy, data, layer) {\n    var i, trace, node;\n\n    var carpet = data[0][0].carpet;\n    // mimic cartesian plotinfo\n    var plotinfo = {\n        xaxis: Axes.getFromId(gd, carpet.xaxis || 'x'),\n        yaxis: Axes.getFromId(gd, carpet.yaxis || 'y'),\n        plot: plotinfoproxy.plot,\n    };\n\n    scatterPlot(gd, plotinfo, data, layer);\n\n    for(i = 0; i < data.length; i++) {\n        trace = data[i][0].trace;\n\n        // Note: .select is adequate but seems to mutate the node data,\n        // which is at least a bit suprising and causes problems elsewhere\n        node = layer.selectAll('g.trace' + trace.uid + ' .js-line');\n\n        // Note: it would be more efficient if this didn't need to be applied\n        // separately to all scattercarpet traces, but that would require\n        // lots of reorganization of scatter traces that is otherwise not\n        // necessary. That makes this a potential optimization.\n        Drawing.setClipUrl(node, carpet._clipPathId);\n    }\n};\n",null]}