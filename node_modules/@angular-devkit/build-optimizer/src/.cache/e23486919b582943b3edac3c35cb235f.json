{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/ab_defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/ab_defaults.js","mtime":1529418310704},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar handleAxisDefaults = require('./axis_defaults');\n\nmodule.exports = function handleABDefaults(traceIn, traceOut, fullLayout, coerce, dfltColor) {\n    var a = coerce('a');\n\n    if(!a) {\n        coerce('da');\n        coerce('a0');\n    }\n\n    var b = coerce('b');\n\n    if(!b) {\n        coerce('db');\n        coerce('b0');\n    }\n\n    mimickAxisDefaults(traceIn, traceOut, fullLayout, dfltColor);\n};\n\nfunction mimickAxisDefaults(traceIn, traceOut, fullLayout, dfltColor) {\n    var axesList = ['aaxis', 'baxis'];\n\n    axesList.forEach(function(axName) {\n        var axLetter = axName.charAt(0);\n        var axIn = traceIn[axName] || {};\n        var axOut = {};\n\n        var defaultOptions = {\n            tickfont: 'x',\n            id: axLetter + 'axis',\n            letter: axLetter,\n            font: traceOut.font,\n            name: axName,\n            data: traceIn[axLetter],\n            calendar: traceOut.calendar,\n            dfltColor: dfltColor,\n            bgColor: fullLayout.paper_bgcolor,\n            fullLayout: fullLayout\n        };\n\n        handleAxisDefaults(axIn, axOut, defaultOptions);\n\n        axOut._categories = axOut._categories || [];\n\n        traceOut[axName] = axOut;\n\n        // so we don't have to repeat autotype unnecessarily,\n        // copy an autotype back to traceIn\n        if(!traceIn[axName] && axIn.type !== '-') {\n            traceIn[axName] = {type: axIn.type};\n        }\n    });\n}\n",null]}