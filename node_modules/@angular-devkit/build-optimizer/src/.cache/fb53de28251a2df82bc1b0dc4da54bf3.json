{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/box/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/box/defaults.js","mtime":1529418310702},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Registry = require('../../registry');\nvar Color = require('../../components/color');\n\nvar attributes = require('./attributes');\n\nfunction supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    handleSampleDefaults(traceIn, traceOut, coerce, layout);\n    if(traceOut.visible === false) return;\n\n    coerce('line.color', (traceIn.marker || {}).color || defaultColor);\n    coerce('line.width');\n    coerce('fillcolor', Color.addOpacity(traceOut.line.color, 0.5));\n\n    coerce('whiskerwidth');\n    coerce('boxmean');\n\n    var notched = coerce('notched', traceIn.notchwidth !== undefined);\n    if(notched) coerce('notchwidth');\n\n    handlePointsDefaults(traceIn, traceOut, coerce, {prefix: 'box'});\n}\n\nfunction handleSampleDefaults(traceIn, traceOut, coerce, layout) {\n    var y = coerce('y');\n    var x = coerce('x');\n    var hasX = x && x.length;\n\n    var defaultOrientation, len;\n\n    if(y && y.length) {\n        defaultOrientation = 'v';\n        if(hasX) {\n            len = Math.min(x.length, y.length);\n        }\n        else {\n            coerce('x0');\n            len = y.length;\n        }\n    } else if(hasX) {\n        defaultOrientation = 'h';\n        coerce('y0');\n        len = x.length;\n    } else {\n        traceOut.visible = false;\n        return;\n    }\n    traceOut._length = len;\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n\n    coerce('orientation', defaultOrientation);\n}\n\nfunction handlePointsDefaults(traceIn, traceOut, coerce, opts) {\n    var prefix = opts.prefix;\n\n    var outlierColorDflt = Lib.coerce2(traceIn, traceOut, attributes, 'marker.outliercolor');\n    var lineoutliercolor = coerce('marker.line.outliercolor');\n\n    var points = coerce(\n        prefix + 'points',\n        (outlierColorDflt || lineoutliercolor) ? 'suspectedoutliers' : undefined\n    );\n\n    if(points) {\n        coerce('jitter', points === 'all' ? 0.3 : 0);\n        coerce('pointpos', points === 'all' ? -1.5 : 0);\n\n        coerce('marker.symbol');\n        coerce('marker.opacity');\n        coerce('marker.size');\n        coerce('marker.color', traceOut.line.color);\n        coerce('marker.line.color');\n        coerce('marker.line.width');\n\n        if(points === 'suspectedoutliers') {\n            coerce('marker.line.outliercolor', traceOut.marker.color);\n            coerce('marker.line.outlierwidth');\n        }\n\n        coerce('selected.marker.color');\n        coerce('unselected.marker.color');\n        coerce('selected.marker.size');\n        coerce('unselected.marker.size');\n\n        coerce('text');\n    } else {\n        delete traceOut.marker;\n    }\n\n    coerce('hoveron');\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n}\n\nmodule.exports = {\n    supplyDefaults: supplyDefaults,\n    handleSampleDefaults: handleSampleDefaults,\n    handlePointsDefaults: handlePointsDefaults\n};\n",null]}