{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/aws-sdk/lib/xml/xml-node.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/aws-sdk/lib/xml/xml-node.js","mtime":1529418306565},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["var escapeAttribute = require('./escape-attribute').escapeAttribute;\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n    if (children === void 0) { children = []; }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n};\nXmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = '<' + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n        var attributeName = attributeNames[i];\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== 'undefined' && attribute !== null) {\n            xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n        }\n    }\n    return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) { return c.toString(); }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlNode: XmlNode\n};",null]}