{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/box/style.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/box/style.js","mtime":1529418310703},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\n\nfunction style(gd, cd) {\n    var s = cd ? cd[0].node3 : d3.select(gd).selectAll('g.trace.boxes');\n\n    s.style('opacity', function(d) { return d[0].trace.opacity; });\n\n    s.each(function(d) {\n        var el = d3.select(this);\n        var trace = d[0].trace;\n        var lineWidth = trace.line.width;\n\n        function styleBox(boxSel, lineWidth, lineColor, fillColor) {\n            boxSel.style('stroke-width', lineWidth + 'px')\n                .call(Color.stroke, lineColor)\n                .call(Color.fill, fillColor);\n        }\n\n        var allBoxes = el.selectAll('path.box');\n\n        if(trace.type === 'candlestick') {\n            allBoxes.each(function(boxData) {\n                var thisBox = d3.select(this);\n                var container = trace[boxData.dir]; // dir = 'increasing' or 'decreasing'\n                styleBox(thisBox, container.line.width, container.line.color, container.fillcolor);\n                // TODO: custom selection style for candlesticks\n                thisBox.style('opacity', trace.selectedpoints && !boxData.selected ? 0.3 : 1);\n            });\n        }\n        else {\n            styleBox(allBoxes, lineWidth, trace.line.color, trace.fillcolor);\n            el.selectAll('path.mean')\n                .style({\n                    'stroke-width': lineWidth,\n                    'stroke-dasharray': (2 * lineWidth) + 'px,' + lineWidth + 'px'\n                })\n                .call(Color.stroke, trace.line.color);\n\n            var pts = el.selectAll('path.point');\n            Drawing.pointStyle(pts, trace, gd);\n        }\n    });\n}\n\nfunction styleOnSelect(gd, cd) {\n    var s = cd[0].node3;\n    var trace = cd[0].trace;\n    var pts = s.selectAll('path.point');\n\n    if(trace.selectedpoints) {\n        Drawing.selectedPointStyle(pts, trace);\n    } else {\n        Drawing.pointStyle(pts, trace, gd);\n    }\n}\n\nmodule.exports = {\n    style: style,\n    styleOnSelect: styleOnSelect\n};\n",null]}