{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/array_minmax.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/array_minmax.js","mtime":1529418310704},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nmodule.exports = function(a) {\n    return minMax(a, 0);\n};\n\nfunction minMax(a, depth) {\n    // Limit to ten dimensional datasets. This seems *exceedingly* unlikely to\n    // ever cause problems or even be a concern. It's include strictly so that\n    // circular arrays could never cause this to loop.\n    if(!isArrayOrTypedArray(a) || depth >= 10) {\n        return null;\n    }\n\n    var min = Infinity;\n    var max = -Infinity;\n    var n = a.length;\n    for(var i = 0; i < n; i++) {\n        var datum = a[i];\n\n        if(isArrayOrTypedArray(datum)) {\n            var result = minMax(datum, depth + 1);\n\n            if(result) {\n                min = Math.min(result[0], min);\n                max = Math.max(result[1], max);\n            }\n        } else {\n            min = Math.min(datum, min);\n            max = Math.max(datum, max);\n        }\n    }\n\n    return [min, max];\n}\n",null]}