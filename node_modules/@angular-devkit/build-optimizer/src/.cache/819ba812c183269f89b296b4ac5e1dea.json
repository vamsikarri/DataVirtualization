{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatterpolar/hover.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatterpolar/hover.js","mtime":1529418310744},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterHover = require('../scatter/hover');\nvar Axes = require('../../plots/cartesian/axes');\nvar Lib = require('../../lib');\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n    var scatterPointData = scatterHover(pointData, xval, yval, hovermode);\n    if(!scatterPointData || scatterPointData[0].index === false) return;\n\n    var newPointData = scatterPointData[0];\n\n    // hovering on fill case\n    if(newPointData.index === undefined) {\n        return scatterPointData;\n    }\n\n    var subplot = pointData.subplot;\n    var cdi = newPointData.cd[newPointData.index];\n    var trace = newPointData.trace;\n\n    if(!subplot.isPtWithinSector(cdi)) return;\n\n    newPointData.xLabelVal = undefined;\n    newPointData.yLabelVal = undefined;\n    newPointData.extraText = makeHoverPointText(cdi, trace, subplot);\n\n    return scatterPointData;\n}\n\nfunction makeHoverPointText(cdi, trace, subplot) {\n    var radialAxis = subplot.radialAxis;\n    var angularAxis = subplot.angularAxis;\n    var hoverinfo = cdi.hi || trace.hoverinfo;\n    var parts = hoverinfo.split('+');\n    var text = [];\n\n    radialAxis._hovertitle = 'r';\n    angularAxis._hovertitle = 'Î¸';\n\n    var rad = angularAxis._c2rad(cdi.theta, trace.thetaunit);\n\n    // show theta value in unit of angular axis\n    var theta;\n    if(angularAxis.type === 'linear' && trace.thetaunit !== angularAxis.thetaunit) {\n        theta = angularAxis.thetaunit === 'degrees' ? Lib.rad2deg(rad) : rad;\n    } else {\n        theta = cdi.theta;\n    }\n\n    function textPart(ax, val) {\n        text.push(ax._hovertitle + ': ' + Axes.tickText(ax, val, 'hover').text);\n    }\n\n    if(parts.indexOf('all') !== -1) parts = ['r', 'theta'];\n    if(parts.indexOf('r') !== -1) textPart(radialAxis, radialAxis.c2r(cdi.r));\n    if(parts.indexOf('theta') !== -1) textPart(angularAxis, theta);\n\n    return text.join('<br>');\n}\n\nmodule.exports = {\n    hoverPoints: hoverPoints,\n    makeHoverPointText: makeHoverPointText\n};\n",null]}