{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-scatter3d/lib/glyphs.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-scatter3d/lib/glyphs.js","mtime":1529418308681},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["\"use strict\"\r\n\r\nvar vectorizeText = require(\"vectorize-text\")\r\n\r\nmodule.exports = getGlyph\r\n\r\nvar GLYPH_CACHE = {}\r\n\r\nfunction getGlyph(symbol, font) {\r\n  var fontCache = GLYPH_CACHE[font]\r\n  if(!fontCache) {\r\n    fontCache = GLYPH_CACHE[font] = {}\r\n  }\r\n  if(symbol in fontCache) {\r\n    return fontCache[symbol]\r\n  }\r\n\r\n  //Get line and triangle meshes for glyph\r\n  var lineSymbol = vectorizeText(symbol, {\r\n      textAlign: \"center\",\r\n      textBaseline: \"middle\",\r\n      lineHeight: 1.0,\r\n      font: font\r\n    }) \r\n  var triSymbol = vectorizeText(symbol, {\r\n      triangles: true,\r\n      textAlign: \"center\",\r\n      textBaseline: \"middle\",\r\n      lineHeight: 1.0,\r\n      font: font\r\n    })\r\n\r\n  //Calculate bounding box\r\n  var bounds = [[Infinity,Infinity], [-Infinity,-Infinity]]\r\n  for(var i=0; i<lineSymbol.positions.length; ++i) {\r\n    var p = lineSymbol.positions[i]\r\n    for(var j=0; j<2; ++j) {\r\n      bounds[0][j] = Math.min(bounds[0][j], p[j])\r\n      bounds[1][j] = Math.max(bounds[1][j], p[j])\r\n    }\r\n  }\r\n\r\n  //Save cached symbol\r\n  return fontCache[symbol] = [triSymbol, lineSymbol, bounds]\r\n}",null]}