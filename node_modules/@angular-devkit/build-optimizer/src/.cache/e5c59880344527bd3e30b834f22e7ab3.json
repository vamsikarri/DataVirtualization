{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-scatter3d/lib/shaders.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-scatter3d/lib/shaders.js","mtime":1529418308682},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["var createShaderWrapper = require('gl-shader')\r\nvar glslify = require('glslify')\r\n\r\nvar perspectiveVertSrc = glslify('./perspective.glsl')\r\nvar orthographicVertSrc = glslify('./orthographic.glsl')\r\nvar projectionVertSrc = glslify('./projection.glsl')\r\nvar drawFragSrc = glslify('./draw-fragment.glsl')\r\nvar pickFragSrc = glslify('./pick-fragment.glsl')\r\n\r\nvar ATTRIBUTES = [\r\n  {name: 'position', type: 'vec3'},\r\n  {name: 'color', type: 'vec4'},\r\n  {name: 'glyph', type: 'vec2'},\r\n  {name: 'id', type: 'vec4'}\r\n]\r\n\r\nvar perspective = {\r\n    vertex: perspectiveVertSrc,\r\n    fragment: drawFragSrc,\r\n    attributes: ATTRIBUTES\r\n  },\r\n  ortho = {\r\n    vertex: orthographicVertSrc,\r\n    fragment: drawFragSrc,\r\n    attributes: ATTRIBUTES\r\n  },\r\n  project = {\r\n    vertex: projectionVertSrc,\r\n    fragment: drawFragSrc,\r\n    attributes: ATTRIBUTES\r\n  },\r\n  pickPerspective = {\r\n    vertex: perspectiveVertSrc,\r\n    fragment: pickFragSrc,\r\n    attributes: ATTRIBUTES\r\n  },\r\n  pickOrtho = {\r\n    vertex: orthographicVertSrc,\r\n    fragment: pickFragSrc,\r\n    attributes: ATTRIBUTES\r\n  },\r\n  pickProject = {\r\n    vertex: projectionVertSrc,\r\n    fragment: pickFragSrc,\r\n    attributes: ATTRIBUTES\r\n  }\r\n\r\nfunction createShader(gl, src) {\r\n  var shader = createShaderWrapper(gl, src)\r\n  var attr = shader.attributes\r\n  attr.position.location = 0\r\n  attr.color.location = 1\r\n  attr.glyph.location = 2\r\n  attr.id.location = 3\r\n  return shader\r\n}\r\n\r\nexports.createPerspective = function(gl) {\r\n  return createShader(gl, perspective)\r\n}\r\nexports.createOrtho = function(gl) {\r\n  return createShader(gl, ortho)\r\n}\r\nexports.createProject = function(gl) {\r\n  return createShader(gl, project)\r\n}\r\nexports.createPickPerspective = function(gl) {\r\n  return createShader(gl, pickPerspective)\r\n}\r\nexports.createPickOrtho = function(gl) {\r\n  return createShader(gl, pickOrtho)\r\n}\r\nexports.createPickProject = function(gl) {\r\n  return createShader(gl, pickProject)\r\n}\r\n",null]}