{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/choropleth/attributes.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/choropleth/attributes.js","mtime":1529418310708},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterGeoAttrs = require('../scattergeo/attributes');\nvar colorscaleAttrs = require('../../components/colorscale/attributes');\nvar colorbarAttrs = require('../../components/colorbar/attributes');\nvar plotAttrs = require('../../plots/attributes');\n\nvar extend = require('../../lib/extend');\nvar extendFlat = extend.extendFlat;\nvar extendDeepAll = extend.extendDeepAll;\n\nvar scatterGeoMarkerLineAttrs = scatterGeoAttrs.marker.line;\n\nmodule.exports = extendFlat({\n    locations: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the coordinates via location IDs or names.',\n            'See `locationmode` for more info.'\n        ].join(' ')\n    },\n    locationmode: scatterGeoAttrs.locationmode,\n    z: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the color values.'\n    },\n    text: extendFlat({}, scatterGeoAttrs.text, {\n        description: 'Sets the text elements associated with each location.'\n    }),\n    marker: {\n        line: {\n            color: scatterGeoMarkerLineAttrs.color,\n            width: extendFlat({}, scatterGeoMarkerLineAttrs.width, {dflt: 1}),\n            editType: 'calc'\n        },\n        opacity: {\n            valType: 'number',\n            arrayOk: true,\n            min: 0,\n            max: 1,\n            dflt: 1,\n            role: 'style',\n            editType: 'style',\n            description: 'Sets the opacity of the locations.'\n        },\n        editType: 'calc'\n    },\n\n    selected: {\n        marker: {\n            opacity: scatterGeoAttrs.selected.marker.opacity,\n            editType: 'plot'\n        },\n        editType: 'plot'\n    },\n    unselected: {\n        marker: {\n            opacity: scatterGeoAttrs.unselected.marker.opacity,\n            editType: 'plot'\n        },\n        editType: 'plot'\n    },\n\n    hoverinfo: extendFlat({}, plotAttrs.hoverinfo, {\n        editType: 'calc',\n        flags: ['location', 'z', 'text', 'name']\n    })\n},\n    extendDeepAll({}, colorscaleAttrs, {\n        zmax: {editType: 'calc'},\n        zmin: {editType: 'calc'}\n    }),\n    { colorbar: colorbarAttrs }\n);\n",null]}