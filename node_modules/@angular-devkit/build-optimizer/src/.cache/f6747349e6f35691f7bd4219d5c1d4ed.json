{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/ohlc/plot.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/ohlc/plot.js","mtime":1529418310725},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\n\nmodule.exports = function plot(gd, plotinfo, cdOHLC, ohlcLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    var traces = ohlcLayer.selectAll('g.trace')\n        .data(cdOHLC, function(d) { return d[0].trace.uid; });\n\n    traces.enter().append('g')\n        .attr('class', 'trace ohlc');\n\n    traces.exit().remove();\n\n    traces.order();\n\n    traces.each(function(d) {\n        var cd0 = d[0];\n        var t = cd0.t;\n        var trace = cd0.trace;\n        var sel = d3.select(this);\n        if(!plotinfo.isRangePlot) cd0.node3 = sel;\n\n        if(trace.visible !== true || t.empty) {\n            sel.remove();\n            return;\n        }\n\n        var tickLen = t.tickLen;\n\n        var paths = sel.selectAll('path').data(Lib.identity);\n\n        paths.enter().append('path');\n\n        paths.exit().remove();\n\n        paths.attr('d', function(d) {\n            var x = xa.c2p(d.pos, true);\n            var xo = xa.c2p(d.pos - tickLen, true);\n            var xc = xa.c2p(d.pos + tickLen, true);\n\n            var yo = ya.c2p(d.o, true);\n            var yh = ya.c2p(d.h, true);\n            var yl = ya.c2p(d.l, true);\n            var yc = ya.c2p(d.c, true);\n\n            return 'M' + xo + ',' + yo + 'H' + x +\n                'M' + x + ',' + yh + 'V' + yl +\n                'M' + xc + ',' + yc + 'H' + x;\n        });\n    });\n};\n",null]}