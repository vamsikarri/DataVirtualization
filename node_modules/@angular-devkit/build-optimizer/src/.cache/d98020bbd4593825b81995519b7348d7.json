{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/color-rgba/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/color-rgba/index.js","mtime":1529418307215},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/** @module  color-rgba */\r\n\r\n'use strict'\r\n\r\nvar parse = require('color-parse')\r\nvar hsl = require('color-space/hsl')\r\nvar clamp = require('clamp')\r\n\r\nmodule.exports = function rgba (color) {\r\n\tvar values, i, l\r\n\r\n\tif (typeof color !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//attempt to parse non-array arguments\r\n\tvar parsed = parse(color)\r\n\r\n\tif (!parsed.space) return []\r\n\r\n\tvalues = Array(3)\r\n\tvalues[0] = clamp(parsed.values[0], 0, 255)\r\n\tvalues[1] = clamp(parsed.values[1], 0, 255)\r\n\tvalues[2] = clamp(parsed.values[2], 0, 255)\r\n\r\n\tif (parsed.space[0] === 'h') {\r\n\t\tvalues = hsl.rgb(values)\r\n\t}\r\n\r\n\tvalues.push(clamp(parsed.alpha, 0, 1))\r\n\r\n\treturn values\r\n}\r\n",null]}