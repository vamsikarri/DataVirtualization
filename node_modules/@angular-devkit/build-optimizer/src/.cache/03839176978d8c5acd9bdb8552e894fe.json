{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/calc_clippath.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/calc_clippath.js","mtime":1529418310705},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nmodule.exports = function makeClipPath(xctrl, yctrl, aax, bax) {\n    var i, x, y;\n    var segments = [];\n\n    var asmoothing = !!aax.smoothing;\n    var bsmoothing = !!bax.smoothing;\n    var nea1 = xctrl[0].length - 1;\n    var neb1 = xctrl.length - 1;\n\n    // Along the lower a axis:\n    for(i = 0, x = [], y = []; i <= nea1; i++) {\n        x[i] = xctrl[0][i];\n        y[i] = yctrl[0][i];\n    }\n    segments.push({x: x, y: y, bicubic: asmoothing});\n\n    // Along the upper b axis:\n    for(i = 0, x = [], y = []; i <= neb1; i++) {\n        x[i] = xctrl[i][nea1];\n        y[i] = yctrl[i][nea1];\n    }\n    segments.push({x: x, y: y, bicubic: bsmoothing});\n\n    // Backwards along the upper a axis:\n    for(i = nea1, x = [], y = []; i >= 0; i--) {\n        x[nea1 - i] = xctrl[neb1][i];\n        y[nea1 - i] = yctrl[neb1][i];\n    }\n    segments.push({x: x, y: y, bicubic: asmoothing});\n\n    // Backwards along the lower b axis:\n    for(i = neb1, x = [], y = []; i >= 0; i--) {\n        x[neb1 - i] = xctrl[i][0];\n        y[neb1 - i] = yctrl[i][0];\n    }\n    segments.push({x: x, y: y, bicubic: bsmoothing});\n\n    return segments;\n};\n",null]}