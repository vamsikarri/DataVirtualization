{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/contour/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/contour/defaults.js","mtime":1529418310712},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleXYZDefaults = require('../heatmap/xyz_defaults');\nvar handleConstraintDefaults = require('./constraint_defaults');\nvar handleContoursDefaults = require('./contours_defaults');\nvar handleStyleDefaults = require('./style_defaults');\nvar attributes = require('./attributes');\n\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    function coerce2(attr) {\n        return Lib.coerce2(traceIn, traceOut, attributes, attr);\n    }\n\n    var len = handleXYZDefaults(traceIn, traceOut, coerce, layout);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('text');\n    var isConstraint = (coerce('contours.type') === 'constraint');\n    coerce('connectgaps', Lib.isArray1D(traceOut.z));\n\n    // trace-level showlegend has already been set, but is only allowed if this is a constraint\n    if(!isConstraint) delete traceOut.showlegend;\n\n    if(isConstraint) {\n        handleConstraintDefaults(traceIn, traceOut, coerce, layout, defaultColor);\n    }\n    else {\n        handleContoursDefaults(traceIn, traceOut, coerce, coerce2);\n        handleStyleDefaults(traceIn, traceOut, coerce, layout);\n    }\n};\n",null]}