{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-surface3d/lib/shaders.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-surface3d/lib/shaders.js","mtime":1529418308694},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["var createShader = require('gl-shader')\r\nvar glslify = require('glslify')\r\n\r\nvar vertSrc = glslify('../shaders/vertex.glsl')\r\nvar fragSrc = glslify('../shaders/fragment.glsl')\r\nvar contourVertSrc = glslify('../shaders/contour-vertex.glsl')\r\nvar pickSrc = glslify('../shaders/pick.glsl')\r\n\r\nexports.createShader = function (gl) {\r\n  var shader = createShader(gl, vertSrc, fragSrc, null, [\r\n    {name: 'uv', type: 'vec4'},\r\n    {name: 'f', type: 'vec3'},\r\n    {name: 'normal', type: 'vec3'}\r\n  ])\r\n  shader.attributes.uv.location = 0\r\n  shader.attributes.f.location = 1\r\n  shader.attributes.normal.location = 2\r\n  return shader\r\n}\r\nexports.createPickShader = function (gl) {\r\n  var shader = createShader(gl, vertSrc, pickSrc, null, [\r\n    {name: 'uv', type: 'vec4'},\r\n    {name: 'f', type: 'vec3'},\r\n    {name: 'normal', type: 'vec3'}\r\n  ])\r\n  shader.attributes.uv.location = 0\r\n  shader.attributes.f.location = 1\r\n  shader.attributes.normal.location = 2\r\n  return shader\r\n}\r\nexports.createContourShader = function (gl) {\r\n  var shader = createShader(gl, contourVertSrc, fragSrc, null, [\r\n    {name: 'uv', type: 'vec4'},\r\n    {name: 'f', type: 'float'}\r\n  ])\r\n  shader.attributes.uv.location = 0\r\n  shader.attributes.f.location = 1\r\n  return shader\r\n}\r\nexports.createPickContourShader = function (gl) {\r\n  var shader = createShader(gl, contourVertSrc, pickSrc, null, [\r\n    {name: 'uv', type: 'vec4'},\r\n    {name: 'f', type: 'float'}\r\n  ])\r\n  shader.attributes.uv.location = 0\r\n  shader.attributes.f.location = 1\r\n  return shader\r\n}\r\n",null]}