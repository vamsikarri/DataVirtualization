{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/lib/html2unicode.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/lib/html2unicode.js","mtime":1529418310673},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar toSuperScript = require('superscript-text');\nvar stringMappings = require('../constants/string_mappings');\n\nfunction fixSuperScript(x) {\n    var idx = 0;\n\n    while((idx = x.indexOf('<sup>', idx)) >= 0) {\n        var nidx = x.indexOf('</sup>', idx);\n        if(nidx < idx) break;\n\n        x = x.slice(0, idx) + toSuperScript(x.slice(idx + 5, nidx)) + x.slice(nidx + 6);\n    }\n\n    return x;\n}\n\nfunction fixBR(x) {\n    return x.replace(/\\<br\\>/g, '\\n');\n}\n\nfunction stripTags(x) {\n    return x.replace(/\\<.*\\>/g, '');\n}\n\nfunction fixEntities(x) {\n    var entityToUnicode = stringMappings.entityToUnicode;\n    var idx = 0;\n\n    while((idx = x.indexOf('&', idx)) >= 0) {\n        var nidx = x.indexOf(';', idx);\n        if(nidx < idx) {\n            idx += 1;\n            continue;\n        }\n\n        var entity = entityToUnicode[x.slice(idx + 1, nidx)];\n        if(entity) {\n            x = x.slice(0, idx) + entity + x.slice(nidx + 1);\n        } else {\n            x = x.slice(0, idx) + x.slice(nidx + 1);\n        }\n    }\n\n    return x;\n}\n\nfunction convertHTMLToUnicode(html) {\n    return '' +\n        fixEntities(\n        stripTags(\n        fixSuperScript(\n        fixBR(\n          html))));\n}\n\nmodule.exports = convertHTMLToUnicode;\n",null]}