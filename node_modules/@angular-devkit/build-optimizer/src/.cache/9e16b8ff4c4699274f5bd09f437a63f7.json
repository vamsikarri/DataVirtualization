{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-axes3d/lib/background.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/gl-axes3d/lib/background.js","mtime":1529418308592},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["'use strict'\r\n\r\nmodule.exports = createBackgroundCube\r\n\r\nvar createBuffer = require('gl-buffer')\r\nvar createVAO    = require('gl-vao')\r\nvar createShader = require('./shaders').bg\r\n\r\nfunction BackgroundCube(gl, buffer, vao, shader) {\r\n  this.gl = gl\r\n  this.buffer = buffer\r\n  this.vao = vao\r\n  this.shader = shader\r\n}\r\n\r\nvar proto = BackgroundCube.prototype\r\n\r\nproto.draw = function(model, view, projection, bounds, enable, colors) {\r\n  var needsBG = false\r\n  for(var i=0; i<3; ++i) {\r\n    needsBG = needsBG || enable[i]\r\n  }\r\n  if(!needsBG) {\r\n    return\r\n  }\r\n\r\n  var gl = this.gl\r\n\r\n  gl.enable(gl.POLYGON_OFFSET_FILL)\r\n  gl.polygonOffset(1, 2)\r\n\r\n  this.shader.bind()\r\n  this.shader.uniforms = {\r\n    model: model,\r\n    view: view,\r\n    projection: projection,\r\n    bounds: bounds,\r\n    enable: enable,\r\n    colors: colors\r\n  }\r\n  this.vao.bind()\r\n  this.vao.draw(this.gl.TRIANGLES, 36)\r\n  this.vao.unbind()\r\n\r\n  gl.disable(gl.POLYGON_OFFSET_FILL)\r\n}\r\n\r\nproto.dispose = function() {\r\n  this.vao.dispose()\r\n  this.buffer.dispose()\r\n  this.shader.dispose()\r\n}\r\n\r\nfunction createBackgroundCube(gl) {\r\n  //Create cube vertices\r\n  var vertices = []\r\n  var indices  = []\r\n  var ptr = 0\r\n  for(var d=0; d<3; ++d) {\r\n    var u = (d+1) % 3\r\n    var v = (d+2) % 3\r\n    var x = [0,0,0]\r\n    var c = [0,0,0]\r\n    for(var s=-1; s<=1; s+=2) {\r\n      indices.push(ptr,   ptr+2, ptr+1,\r\n                   ptr+1, ptr+2, ptr+3)\r\n      x[d] = s\r\n      c[d] = s\r\n      for(var i=-1; i<=1; i+=2) {\r\n        x[u] = i\r\n        for(var j=-1; j<=1; j+=2) {\r\n          x[v] = j\r\n          vertices.push(x[0], x[1], x[2],\r\n                        c[0], c[1], c[2])\r\n          ptr += 1\r\n        }\r\n      }\r\n      //Swap u and v\r\n      var tt = u\r\n      u = v\r\n      v = tt\r\n    }\r\n  }\r\n\r\n  //Allocate buffer and vertex array\r\n  var buffer = createBuffer(gl, new Float32Array(vertices))\r\n  var elements = createBuffer(gl, new Uint16Array(indices), gl.ELEMENT_ARRAY_BUFFER)\r\n  var vao = createVAO(gl, [\r\n      {\r\n        buffer: buffer,\r\n        type: gl.FLOAT,\r\n        size: 3,\r\n        offset: 0,\r\n        stride: 24\r\n      },\r\n      {\r\n        buffer: buffer,\r\n        type: gl.FLOAT,\r\n        size: 3,\r\n        offset: 12,\r\n        stride: 24\r\n      }\r\n    ], elements)\r\n\r\n  //Create shader object\r\n  var shader = createShader(gl)\r\n  shader.attributes.position.location = 0\r\n  shader.attributes.normal.location = 1\r\n\r\n  return new BackgroundCube(gl, buffer, vao, shader)\r\n}\r\n",null]}