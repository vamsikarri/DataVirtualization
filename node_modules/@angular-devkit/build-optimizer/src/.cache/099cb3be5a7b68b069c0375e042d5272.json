{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/polar/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/polar/index.js","mtime":1529418310694},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\nvar counterRegex = require('../../lib').counterRegex;\n\nvar createPolar = require('./polar');\nvar constants = require('./constants');\n\nvar attr = constants.attr;\nvar name = constants.name;\nvar counter = counterRegex(name);\n\nvar attributes = {};\nattributes[attr] = {\n    valType: 'subplotid',\n    role: 'info',\n    dflt: name,\n    editType: 'calc',\n    description: [\n        'Sets a reference between this trace\\'s data coordinates and',\n        'a polar subplot.',\n        'If *polar* (the default value), the data refer to `layout.polar`.',\n        'If *polar2*, the data refer to `layout.polar2`, and so on.'\n    ].join(' ')\n};\n\nfunction plot(gd) {\n    var fullLayout = gd._fullLayout;\n    var calcData = gd.calcdata;\n    var subplotIds = fullLayout._subplots[name];\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var id = subplotIds[i];\n        var subplotCalcData = getSubplotCalcData(calcData, name, id);\n        var subplot = fullLayout[id]._subplot;\n\n        if(!subplot) {\n            subplot = createPolar(gd, id);\n            fullLayout[id]._subplot = subplot;\n        }\n\n        subplot.plot(subplotCalcData, fullLayout, gd._promises);\n    }\n}\n\nfunction clean(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldIds = oldFullLayout._subplots[name] || [];\n\n    for(var i = 0; i < oldIds.length; i++) {\n        var id = oldIds[i];\n        var oldSubplot = oldFullLayout[id]._subplot;\n\n        if(!newFullLayout[id] && !!oldSubplot) {\n            oldSubplot.framework.remove();\n            oldSubplot.layers['radial-axis-title'].remove();\n\n            for(var k in oldSubplot.clipPaths) {\n                oldSubplot.clipPaths[k].remove();\n            }\n        }\n    }\n}\n\nmodule.exports = {\n    attr: attr,\n    name: name,\n    idRoot: name,\n    idRegex: counter,\n    attrRegex: counter,\n    attributes: attributes,\n    layoutAttributes: require('./layout_attributes'),\n    supplyLayoutDefaults: require('./layout_defaults'),\n    plot: plot,\n    clean: clean,\n    toSVG: require('../cartesian').toSVG\n};\n",null]}