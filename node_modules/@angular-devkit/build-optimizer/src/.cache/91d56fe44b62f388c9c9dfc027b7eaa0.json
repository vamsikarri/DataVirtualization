{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plot_api/plot_config.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plot_api/plot_config.js","mtime":1529418310680},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * This will be transferred over to gd and overridden by\n * config args to Plotly.plot.\n *\n * The defaults are the appropriate settings for plotly.js,\n * so we get the right experience without any config argument.\n */\n\nmodule.exports = {\n\n    // no interactivity, for export or image generation\n    staticPlot: false,\n\n    /*\n     * we can edit titles, move annotations, etc - sets all pieces of `edits`\n     * unless a separate `edits` config item overrides individual parts\n     */\n    editable: false,\n    edits: {\n        /*\n         * annotationPosition: the main anchor of the annotation, which is the\n         * text (if no arrow) or the arrow (which drags the whole thing leaving\n         * the arrow length & direction unchanged)\n         */\n        annotationPosition: false,\n        // just for annotations with arrows, change the length  and direction of the arrow\n        annotationTail: false,\n        annotationText: false,\n        axisTitleText: false,\n        colorbarPosition: false,\n        colorbarTitleText: false,\n        legendPosition: false,\n        // edit the trace name fields from the legend\n        legendText: false,\n        shapePosition: false,\n        // the global `layout.title`\n        titleText: false\n    },\n\n    /*\n     * DO autosize once regardless of layout.autosize\n     * (use default width or height values otherwise)\n     */\n    autosizable: false,\n\n    // set the length of the undo/redo queue\n    queueLength: 0,\n\n    // if we DO autosize, do we fill the container or the screen?\n    fillFrame: false,\n\n    // if we DO autosize, set the frame margins in percents of plot size\n    frameMargins: 0,\n\n    // mousewheel or two-finger scroll zooms the plot\n    scrollZoom: false,\n\n    // double click interaction (false, 'reset', 'autosize' or 'reset+autosize')\n    doubleClick: 'reset+autosize',\n\n    // new users see some hints about interactivity\n    showTips: true,\n\n    // enable axis pan/zoom drag handles\n    showAxisDragHandles: true,\n\n    /*\n     * enable direct range entry at the pan/zoom drag points\n     * (drag handles must be enabled above)\n     */\n    showAxisRangeEntryBoxes: true,\n\n    // link to open this plot in plotly\n    showLink: false,\n\n    // if we show a link, does it contain data or just link to a plotly file?\n    sendData: true,\n\n    // text appearing in the sendData link\n    linkText: 'Edit chart',\n\n    // false or function adding source(s) to linkText <text>\n    showSources: false,\n\n    // display the mode bar (true, false, or 'hover')\n    displayModeBar: 'hover',\n\n    /*\n     * remove mode bar button by name\n     * (see ./components/modebar/buttons.js for the list of names)\n     */\n    modeBarButtonsToRemove: [],\n\n    /*\n     * add mode bar button using config objects\n     * (see ./components/modebar/buttons.js for list of arguments)\n     */\n    modeBarButtonsToAdd: [],\n\n    /*\n     * fully custom mode bar buttons as nested array,\n     * where the outer arrays represents button groups, and\n     * the inner arrays have buttons config objects or names of default buttons\n     * (see ./components/modebar/buttons.js for more info)\n     */\n    modeBarButtons: false,\n\n    // statically override options for toImage modebar button\n    // allowed keys are format, filename, width, height, scale\n    // see ./components/modebar/buttons.js\n    toImageButtonOptions: {},\n\n    // add the plotly logo on the end of the mode bar\n    displaylogo: true,\n\n    // increase the pixel ratio for Gl plot images\n    plotGlPixelRatio: 2,\n\n    /*\n     * background setting function\n     * 'transparent' sets the background `layout.paper_color`\n     * 'opaque' blends bg color with white ensuring an opaque background\n     * or any other custom function of gd\n     */\n    setBackground: 'transparent',\n\n    // URL to topojson files used in geo charts\n    topojsonURL: 'https://cdn.plot.ly/',\n\n    /*\n     * Mapbox access token (required to plot mapbox trace types)\n     * If using an Mapbox Atlas server, set this option to '',\n     * so that plotly.js won't attempt to authenticate to the public Mapbox server.\n     */\n    mapboxAccessToken: null,\n\n    /*\n     * Turn all console logging on or off (errors will be thrown)\n     * This should ONLY be set via Plotly.setPlotConfig\n     * 0: no logs\n     * 1: warnings and errors, but not informational messages\n     * 2: verbose logs\n     */\n    logging: 1,\n\n    /*\n     * Set global transform to be applied to all traces with no\n     * specification needed\n     */\n    globalTransforms: [],\n\n    /*\n     * Which localization should we use?\n     * Should be a string like 'en' or 'en-US'.\n     */\n    locale: 'en-US',\n\n    /*\n     * Localization definitions\n     * Locales can be provided either here (specific to one chart) or globally\n     * by registering them as modules.\n     * Should be an object of objects {locale: {dictionary: {...}, format: {...}}}\n     * {\n     *     da: {\n     *         dictionary: {'Reset axes': 'Nulstil aksler', ...},\n     *         format: {months: [...], shortMonths: [...]}\n     *     },\n     *     ...\n     * }\n     * All parts are optional. When looking for translation or format fields, we\n     * look first for an exact match in a config locale, then in a registered\n     * module. If those fail, we strip off any regionalization ('en-US' -> 'en')\n     * and try each (config, registry) again. The final fallback for translation\n     * is untranslated (which is US English) and for formats is the base English\n     * (the only consequence being the last fallback date format %x is DD/MM/YYYY\n     * instead of MM/DD/YYYY). Currently `grouping` and `currency` are ignored\n     * for our automatic number formatting, but can be used in custom formats.\n     */\n    locales: {}\n};\n",null]}