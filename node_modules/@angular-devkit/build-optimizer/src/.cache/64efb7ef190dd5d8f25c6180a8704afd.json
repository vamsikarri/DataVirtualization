{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/parcoords/base_plot.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/parcoords/base_plot.js","mtime":1529418310726},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar getModuleCalcData = require('../../plots/get_data').getModuleCalcData;\nvar parcoordsPlot = require('./plot');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar PARCOORDS = 'parcoords';\n\nexports.name = PARCOORDS;\n\nexports.plot = function(gd) {\n    var calcData = getModuleCalcData(gd.calcdata, PARCOORDS)[0];\n    if(calcData.length) parcoordsPlot(gd, calcData);\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var hadParcoords = (oldFullLayout._has && oldFullLayout._has(PARCOORDS));\n    var hasParcoords = (newFullLayout._has && newFullLayout._has(PARCOORDS));\n\n    if(hadParcoords && !hasParcoords) {\n        oldFullLayout._paperdiv.selectAll('.parcoords').remove();\n        oldFullLayout._glimages.selectAll('*').remove();\n    }\n};\n\nexports.toSVG = function(gd) {\n    var imageRoot = gd._fullLayout._glimages;\n    var root = d3.select(gd).selectAll('.svg-container');\n    var canvases = root.filter(function(d, i) {return i === root.size() - 1;})\n        .selectAll('.gl-canvas-context, .gl-canvas-focus');\n\n    function canvasToImage() {\n        var canvas = this;\n        var imageData = canvas.toDataURL('image/png');\n        var image = imageRoot.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            preserveAspectRatio: 'none',\n            x: 0,\n            y: 0,\n            width: canvas.width,\n            height: canvas.height\n        });\n    }\n\n    canvases.each(canvasToImage);\n\n    // Chrome / Safari bug workaround - browser apparently loses connection to the defined pattern\n    // Without the workaround, these browsers 'lose' the filter brush styling (color etc.) after a snapshot\n    // on a subsequent interaction.\n    // Firefox works fine without this workaround\n    window.setTimeout(function() {\n        d3.selectAll('#filterBarPattern')\n            .attr('id', 'filterBarPattern');\n    }, 60);\n};\n",null]}