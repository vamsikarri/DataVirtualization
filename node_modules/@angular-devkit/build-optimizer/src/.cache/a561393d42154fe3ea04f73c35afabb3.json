{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattergeo/calc.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattergeo/calc.js","mtime":1529418310740},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar calcMarkerColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\n\nvar _ = require('../../lib')._;\n\nmodule.exports = function calc(gd, trace) {\n    var hasLocationData = Array.isArray(trace.locations);\n    var len = hasLocationData ? trace.locations.length : trace._length;\n    var calcTrace = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var calcPt = calcTrace[i] = {};\n\n        if(hasLocationData) {\n            var loc = trace.locations[i];\n            calcPt.loc = typeof loc === 'string' ? loc : null;\n        } else {\n            var lon = trace.lon[i];\n            var lat = trace.lat[i];\n\n            if(isNumeric(lon) && isNumeric(lat)) calcPt.lonlat = [+lon, +lat];\n            else calcPt.lonlat = [BADNUM, BADNUM];\n        }\n    }\n\n    arraysToCalcdata(calcTrace, trace);\n    calcMarkerColorscale(trace);\n    calcSelection(calcTrace, trace);\n\n    if(len) {\n        calcTrace[0].t = {\n            labels: {\n                lat: _(gd, 'lat:') + ' ',\n                lon: _(gd, 'lon:') + ' '\n            }\n        };\n    }\n\n    return calcTrace;\n};\n",null]}