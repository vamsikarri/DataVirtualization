{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/contour/style.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/contour/style.js","mtime":1529418310714},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Drawing = require('../../components/drawing');\nvar heatmapStyle = require('../heatmap/style');\n\nvar makeColorMap = require('./make_color_map');\n\n\nmodule.exports = function style(gd) {\n    var contours = d3.select(gd).selectAll('g.contour');\n\n    contours.style('opacity', function(d) {\n        return d.trace.opacity;\n    });\n\n    contours.each(function(d) {\n        var c = d3.select(this);\n        var trace = d.trace;\n        var contours = trace.contours;\n        var line = trace.line;\n        var cs = contours.size || 1;\n        var start = contours.start;\n\n        // for contourcarpet only - is this a constraint-type contour trace?\n        var isConstraintType = contours.type === 'constraint';\n        var colorLines = !isConstraintType && contours.coloring === 'lines';\n        var colorFills = !isConstraintType && contours.coloring === 'fill';\n\n        var colorMap = (colorLines || colorFills) ? makeColorMap(trace) : null;\n\n        c.selectAll('g.contourlevel').each(function(d) {\n            d3.select(this).selectAll('path')\n                .call(Drawing.lineGroupStyle,\n                    line.width,\n                    colorLines ? colorMap(d.level) : line.color,\n                    line.dash);\n        });\n\n        var labelFont = contours.labelfont;\n        c.selectAll('g.contourlabels text').each(function(d) {\n            Drawing.font(d3.select(this), {\n                family: labelFont.family,\n                size: labelFont.size,\n                color: labelFont.color || (colorLines ? colorMap(d.level) : line.color)\n            });\n        });\n\n        if(isConstraintType) {\n            c.selectAll('g.contourfill path')\n                .style('fill', trace.fillcolor);\n        }\n        else if(colorFills) {\n            var firstFill;\n\n            c.selectAll('g.contourfill path')\n                .style('fill', function(d) {\n                    if(firstFill === undefined) firstFill = d.level;\n                    return colorMap(d.level + 0.5 * cs);\n                });\n\n            if(firstFill === undefined) firstFill = start;\n\n            c.selectAll('g.contourbg path')\n                .style('fill', colorMap(firstFill - 0.5 * cs));\n        }\n    });\n\n    heatmapStyle(gd);\n};\n",null]}