{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatterternary/plot.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scatterternary/plot.js","mtime":1529418310745},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar scatterPlot = require('../scatter/plot');\n\nmodule.exports = function plot(gd, ternary, moduleCalcData) {\n    var plotContainer = ternary.plotContainer;\n\n    // remove all nodes inside the scatter layer\n    plotContainer.select('.scatterlayer').selectAll('*').remove();\n\n    // mimic cartesian plotinfo\n    var plotinfo = {\n        xaxis: ternary.xaxis,\n        yaxis: ternary.yaxis,\n        plot: plotContainer,\n        layerClipId: ternary._hasClipOnAxisFalse ? ternary.clipIdRelative : null\n    };\n\n    var scatterLayer = ternary.layers.frontplot.select('g.scatterlayer');\n\n    scatterPlot(gd, plotinfo, moduleCalcData, scatterLayer);\n};\n",null]}