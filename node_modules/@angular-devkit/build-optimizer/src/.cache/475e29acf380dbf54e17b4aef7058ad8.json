{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/carpet/index.js","mtime":1529418310707},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Carpet = {};\n\nCarpet.attributes = require('./attributes');\nCarpet.supplyDefaults = require('./defaults');\nCarpet.plot = require('./plot');\nCarpet.calc = require('./calc');\nCarpet.animatable = true;\nCarpet.isContainer = true; // so carpet traces get `calc` before other traces\n\nCarpet.moduleType = 'trace';\nCarpet.name = 'carpet';\nCarpet.basePlotModule = require('../../plots/cartesian');\nCarpet.categories = ['cartesian', 'svg', 'carpet', 'carpetAxis', 'notLegendIsolatable'];\nCarpet.meta = {\n    description: [\n        'The data describing carpet axis layout is set in `y` and (optionally)',\n        'also `x`. If only `y` is present, `x` the plot is interpreted as a',\n        'cheater plot and is filled in using the `y` values.',\n\n        '`x` and `y` may either be 2D arrays matching with each dimension matching',\n        'that of `a` and `b`, or they may be 1D arrays with total length equal to',\n        'that of `a` and `b`.'\n    ].join(' ')\n};\n\nmodule.exports = Carpet;\n",null]}