{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/pointcloud/attributes.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/pointcloud/attributes.js","mtime":1529418310731},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterglAttrs = require('../scatter/attributes');\n\nmodule.exports = {\n    x: scatterglAttrs.x,\n    y: scatterglAttrs.y,\n    xy: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Faster alternative to specifying `x` and `y` separately.',\n            'If supplied, it must be a typed `Float32Array` array that',\n            'represents points such that `xy[i * 2] = x[i]` and `xy[i * 2 + 1] = y[i]`'\n        ].join(' ')\n    },\n    indices: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'A sequential value, 0..n, supply it to avoid creating this array inside plotting.',\n            'If specified, it must be a typed `Int32Array` array.',\n            'Its length must be equal to or greater than the number of points.',\n            'For the best performance and memory use, create one large `indices` typed array',\n            'that is guaranteed to be at least as long as the largest number of points during',\n            'use, and reuse it on each `Plotly.restyle()` call.'\n        ].join(' ')\n    },\n    xbounds: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Specify `xbounds` in the shape of `[xMin, xMax] to avoid looping through',\n            'the `xy` typed array. Use it in conjunction with `xy` and `ybounds` for the performance benefits.'\n        ].join(' ')\n    },\n    ybounds: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Specify `ybounds` in the shape of `[yMin, yMax] to avoid looping through',\n            'the `xy` typed array. Use it in conjunction with `xy` and `xbounds` for the performance benefits.'\n        ].join(' ')\n    },\n    text: scatterglAttrs.text,\n    marker: {\n        color: {\n            valType: 'color',\n            arrayOk: false,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Sets the marker fill color. It accepts a specific color.',\n                'If the color is not fully opaque and there are hundreds of thousands',\n                'of points, it may cause slower zooming and panning.'\n            ].join('')\n        },\n        opacity: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            arrayOk: false,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Sets the marker opacity. The default value is `1` (fully opaque).',\n                'If the markers are not fully opaque and there are hundreds of thousands',\n                'of points, it may cause slower zooming and panning.',\n                'Opacity fades the color even if `blend` is left on `false` even if there',\n                'is no translucency effect in that case.'\n            ].join(' ')\n        },\n        blend: {\n            valType: 'boolean',\n            dflt: null,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Determines if colors are blended together for a translucency effect',\n                'in case `opacity` is specified as a value less then `1`.',\n                'Setting `blend` to `true` reduces zoom/pan',\n                'speed if used with large numbers of points.'\n            ].join(' ')\n        },\n        sizemin: {\n            valType: 'number',\n            min: 0.1,\n            max: 2,\n            dflt: 0.5,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Sets the minimum size (in px) of the rendered marker points, effective when',\n                'the `pointcloud` shows a million or more points.'\n            ].join(' ')\n        },\n        sizemax: {\n            valType: 'number',\n            min: 0.1,\n            dflt: 20,\n            role: 'style',\n            editType: 'calc',\n            description: [\n                'Sets the maximum size (in px) of the rendered marker points.',\n                'Effective when the `pointcloud` shows only few points.'\n            ].join(' ')\n        },\n        border: {\n            color: {\n                valType: 'color',\n                arrayOk: false,\n                role: 'style',\n                editType: 'calc',\n                description: [\n                    'Sets the stroke color. It accepts a specific color.',\n                    'If the color is not fully opaque and there are hundreds of thousands',\n                    'of points, it may cause slower zooming and panning.'\n                ].join(' ')\n            },\n            arearatio: {\n                valType: 'number',\n                min: 0,\n                max: 1,\n                dflt: 0,\n                role: 'style',\n                editType: 'calc',\n                description: [\n                    'Specifies what fraction of the marker area is covered with the',\n                    'border.'\n                ].join(' ')\n            },\n            editType: 'calc'\n        },\n        editType: 'calc'\n    }\n};\n",null]}