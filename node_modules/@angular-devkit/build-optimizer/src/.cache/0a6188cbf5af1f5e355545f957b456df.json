{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/array-range/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/array-range/index.js","mtime":1529418306122},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["\nmodule.exports = function newArray(start, end) {\n    var n0 = typeof start === 'number',\n        n1 = typeof end === 'number'\n\n    if (n0 && !n1) {\n        end = start\n        start = 0\n    } else if (!n0 && !n1) {\n        start = 0\n        end = 0\n    }\n\n    start = start|0\n    end = end|0\n    var len = end-start\n    if (len<0)\n        throw new Error('array length must be positive')\n    \n    var a = new Array(len)\n    for (var i=0, c=start; i<len; i++, c++)\n        a[i] = c\n    return a\n}",null]}