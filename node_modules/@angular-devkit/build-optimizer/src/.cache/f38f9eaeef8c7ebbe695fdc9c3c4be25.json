{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/circumcenter/circumcenter.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/circumcenter/circumcenter.js","mtime":1529418307123},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["\"use strict\"\n\nvar dup = require(\"dup\")\nvar solve = require(\"robust-linear-solve\")\n\nfunction dot(a, b) {\n  var s = 0.0\n  var d = a.length\n  for(var i=0; i<d; ++i) {\n    s += a[i] * b[i]\n  }\n  return s\n}\n\nfunction barycentricCircumcenter(points) {\n  var N = points.length\n  if(N === 0) {\n    return []\n  }\n  \n  var D = points[0].length\n  var A = dup([points.length+1, points.length+1], 1.0)\n  var b = dup([points.length+1], 1.0)\n  A[N][N] = 0.0\n  for(var i=0; i<N; ++i) {\n    for(var j=0; j<=i; ++j) {\n      A[j][i] = A[i][j] = 2.0 * dot(points[i], points[j])\n    }\n    b[i] = dot(points[i], points[i])\n  }\n  var x = solve(A, b)\n\n  var denom = 0.0\n  var h = x[N+1]\n  for(var i=0; i<h.length; ++i) {\n    denom += h[i]\n  }\n\n  var y = new Array(N)\n  for(var i=0; i<N; ++i) {\n    var h = x[i]\n    var numer = 0.0\n    for(var j=0; j<h.length; ++j) {\n      numer += h[j]\n    }\n    y[i] =  numer / denom\n  }\n\n  return y\n}\n\nfunction circumcenter(points) {\n  if(points.length === 0) {\n    return []\n  }\n  var D = points[0].length\n  var result = dup([D])\n  var weights = barycentricCircumcenter(points)\n  for(var i=0; i<points.length; ++i) {\n    for(var j=0; j<D; ++j) {\n      result[j] += points[i][j] * weights[i]\n    }\n  }\n  return result\n}\n\ncircumcenter.barycenetric = barycentricCircumcenter\nmodule.exports = circumcenter",null]}