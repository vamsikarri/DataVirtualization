{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattercarpet/calc.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/scattercarpet/calc.js","mtime":1529418310739},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar lookupCarpet = require('../carpet/lookup_carpetid');\n\nmodule.exports = function calc(gd, trace) {\n    var carpet = trace._carpetTrace = lookupCarpet(gd, trace);\n    if(!carpet || !carpet.visible || carpet.visible === 'legendonly') return;\n    var i;\n\n    // Transfer this over from carpet before plotting since this is a necessary\n    // condition in order for cartesian to actually plot this trace:\n    trace.xaxis = carpet.xaxis;\n    trace.yaxis = carpet.yaxis;\n\n    // make the calcdata array\n    var serieslen = trace._length;\n    var cd = new Array(serieslen);\n    var a, b;\n    var needsCull = false;\n    for(i = 0; i < serieslen; i++) {\n        a = trace.a[i];\n        b = trace.b[i];\n        if(isNumeric(a) && isNumeric(b)) {\n            var xy = carpet.ab2xy(+a, +b, true);\n            var visible = carpet.isVisible(+a, +b);\n            if(!visible) needsCull = true;\n            cd[i] = {x: xy[0], y: xy[1], a: a, b: b, vis: visible};\n        }\n        else cd[i] = {x: false, y: false};\n    }\n\n    trace._needsCull = needsCull;\n\n    cd[0].carpet = carpet;\n    cd[0].trace = trace;\n\n    calcMarkerSize(trace, serieslen);\n    calcColorscale(trace);\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n",null]}