{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/choropleth/style.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/choropleth/style.js","mtime":1529418310709},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Colorscale = require('../../components/colorscale');\n\nfunction style(gd, calcTrace) {\n    if(calcTrace) styleTrace(gd, calcTrace);\n}\n\nfunction styleTrace(gd, calcTrace) {\n    var trace = calcTrace[0].trace;\n    var s = calcTrace[0].node3;\n    var locs = s.selectAll('.choroplethlocation');\n    var marker = trace.marker || {};\n    var markerLine = marker.line || {};\n\n    var sclFunc = Colorscale.makeColorScaleFunc(\n        Colorscale.extractScale(\n            trace.colorscale,\n            trace.zmin,\n            trace.zmax\n        )\n    );\n\n    locs.each(function(d) {\n        d3.select(this)\n            .attr('fill', sclFunc(d.z))\n            .call(Color.stroke, d.mlc || markerLine.color)\n            .call(Drawing.dashLine, '', d.mlw || markerLine.width || 0)\n            .style('opacity', marker.opacity);\n    });\n\n    Drawing.selectedPointStyle(locs, trace, gd);\n}\n\nfunction styleOnSelect(gd, calcTrace) {\n    var s = calcTrace[0].node3;\n    var trace = calcTrace[0].trace;\n\n    if(trace.selectedpoints) {\n        Drawing.selectedPointStyle(s.selectAll('.choroplethlocation'), trace, gd);\n    } else {\n        styleTrace(gd, calcTrace);\n    }\n}\n\nmodule.exports = {\n    style: style,\n    styleOnSelect: styleOnSelect\n};\n",null]}