{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/violin/defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/violin/defaults.js","mtime":1529418310749},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\n\nvar boxDefaults = require('../box/defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    boxDefaults.handleSampleDefaults(traceIn, traceOut, coerce, layout);\n    if(traceOut.visible === false) return;\n\n    coerce('bandwidth');\n    coerce('scalegroup', traceOut.name);\n    coerce('scalemode');\n    coerce('side');\n\n    var span = coerce('span');\n    var spanmodeDflt;\n    if(Array.isArray(span)) spanmodeDflt = 'manual';\n    coerce('spanmode', spanmodeDflt);\n\n    var lineColor = coerce('line.color', (traceIn.marker || {}).color || defaultColor);\n    var lineWidth = coerce('line.width');\n    var fillColor = coerce('fillcolor', Color.addOpacity(traceOut.line.color, 0.5));\n\n    boxDefaults.handlePointsDefaults(traceIn, traceOut, coerce, {prefix: ''});\n\n    var boxWidth = coerce2('box.width');\n    var boxFillColor = coerce2('box.fillcolor', fillColor);\n    var boxLineColor = coerce2('box.line.color', lineColor);\n    var boxLineWidth = coerce2('box.line.width', lineWidth);\n    var boxVisible = coerce('box.visible', Boolean(boxWidth || boxFillColor || boxLineColor || boxLineWidth));\n    if(!boxVisible) delete traceOut.box;\n\n    var meanLineColor = coerce2('meanline.color', lineColor);\n    var meanLineWidth = coerce2('meanline.width', lineWidth);\n    var meanLineVisible = coerce('meanline.visible', Boolean(meanLineColor || meanLineWidth));\n    if(!meanLineVisible) delete traceOut.meanline;\n};\n",null]}