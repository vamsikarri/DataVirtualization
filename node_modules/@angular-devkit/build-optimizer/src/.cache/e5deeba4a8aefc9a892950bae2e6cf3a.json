{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/histogram/index.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/traces/histogram/index.js","mtime":1529418310722},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's setPositions for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\n\n\nvar Histogram = {};\n\nHistogram.attributes = require('./attributes');\nHistogram.layoutAttributes = require('../bar/layout_attributes');\nHistogram.supplyDefaults = require('./defaults');\nHistogram.supplyLayoutDefaults = require('../bar/layout_defaults');\nHistogram.calc = require('./calc');\nHistogram.setPositions = require('../bar/set_positions');\nHistogram.plot = require('../bar/plot');\nHistogram.layerName = 'barlayer';\nHistogram.style = require('../bar/style').style;\nHistogram.styleOnSelect = require('../bar/style').styleOnSelect;\nHistogram.colorbar = require('../scatter/colorbar');\nHistogram.hoverPoints = require('./hover');\nHistogram.selectPoints = require('../bar/select');\nHistogram.eventData = require('./event_data');\n\nHistogram.moduleType = 'trace';\nHistogram.name = 'histogram';\nHistogram.basePlotModule = require('../../plots/cartesian');\nHistogram.categories = ['cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'];\nHistogram.meta = {\n    description: [\n        'The sample data from which statistics are computed is set in `x`',\n        'for vertically spanning histograms and',\n        'in `y` for horizontally spanning histograms.',\n        'Binning options are set `xbins` and `ybins` respectively',\n        'if no aggregation data is provided.'\n    ].join(' ')\n};\n\nmodule.exports = Histogram;\n",null]}