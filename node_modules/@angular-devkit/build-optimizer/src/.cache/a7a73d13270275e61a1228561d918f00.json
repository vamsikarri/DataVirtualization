{"remainingRequest":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/cartesian/tick_label_defaults.js","dependencies":[{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/plotly.js/src/plots/cartesian/tick_label_defaults.js","mtime":1529418310685},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/cache-loader/dist/cjs.js","mtime":1529418306962},{"path":"/Users/vamsikarri/Desktop/Gathi/Angular/FederatedQuery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1529418304772}],"contextDependencies":[],"result":["/**\n* Copyright 2012-2018, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\n\nmodule.exports = function handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options) {\n    var showAttrDflt = getShowAttrDflt(containerIn);\n\n    var tickPrefix = coerce('tickprefix');\n    if(tickPrefix) coerce('showtickprefix', showAttrDflt);\n\n    var tickSuffix = coerce('ticksuffix', options.tickSuffixDflt);\n    if(tickSuffix) coerce('showticksuffix', showAttrDflt);\n\n    var showTickLabels = coerce('showticklabels');\n    if(showTickLabels) {\n        var font = options.font || {};\n        // as with titlefont.color, inherit axis.color only if one was\n        // explicitly provided\n        var dfltFontColor = (containerOut.color === containerIn.color) ?\n            containerOut.color : font.color;\n        Lib.coerceFont(coerce, 'tickfont', {\n            family: font.family,\n            size: font.size,\n            color: dfltFontColor\n        });\n        coerce('tickangle');\n\n        if(axType !== 'category') {\n            var tickFormat = coerce('tickformat');\n            tickformatstopsDefaults(containerIn, containerOut);\n            if(!tickFormat && axType !== 'date') {\n                coerce('showexponent', showAttrDflt);\n                coerce('exponentformat');\n                coerce('separatethousands');\n            }\n        }\n    }\n};\n\n/*\n * Attributes 'showexponent', 'showtickprefix' and 'showticksuffix'\n * share values.\n *\n * If only 1 attribute is set,\n * the remaining attributes inherit that value.\n *\n * If 2 attributes are set to the same value,\n * the remaining attribute inherits that value.\n *\n * If 2 attributes are set to different values,\n * the remaining is set to its dflt value.\n *\n */\nfunction getShowAttrDflt(containerIn) {\n    var showAttrsAll = ['showexponent',\n            'showtickprefix',\n            'showticksuffix'],\n        showAttrs = showAttrsAll.filter(function(a) {\n            return containerIn[a] !== undefined;\n        }),\n        sameVal = function(a) {\n            return containerIn[a] === containerIn[showAttrs[0]];\n        };\n\n    if(showAttrs.every(sameVal) || showAttrs.length === 1) {\n        return containerIn[showAttrs[0]];\n    }\n}\n\nfunction tickformatstopsDefaults(tickformatIn, tickformatOut) {\n    var valuesIn = tickformatIn.tickformatstops;\n    var valuesOut = tickformatOut.tickformatstops = [];\n\n    if(!Array.isArray(valuesIn)) return;\n\n    var valueIn, valueOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(valueIn, valueOut, layoutAttributes.tickformatstops, attr, dflt);\n    }\n\n    for(var i = 0; i < valuesIn.length; i++) {\n        valueIn = valuesIn[i];\n        valueOut = {};\n\n        coerce('dtickrange');\n        coerce('value');\n\n        valuesOut.push(valueOut);\n    }\n}\n",null]}